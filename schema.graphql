type Factory @entity {
  id: ID!
  address: String!
  collectionCount: Int!

  collections: [Collection!]! @derivedFrom(field: "factory")

  createdAtTimestamp: BigInt!
}

type Collection @entity {
  id: ID!
  name: String!
  symbol: String!
  address: String!
  nftCount: Int!

  createdAtTimestamp: BigInt!
  lastUpdatedAtTimestamp: BigInt!
  lastActivityAtTimestamp: BigInt!

  factory: Factory!
  engine: Engine!
  creator: Account!
  nfts: [NFT!]! @derivedFrom(field: "collection")
}

type Engine @entity {
  id: ID!
  address: String!
  name: String!
  collectionCount: Int!
  mintedNftsCount: Int!

  releasedAtTimestamp: BigInt!
  lastUpdatedAtTimestamp: BigInt!
  lastInstalledAtTimestamp: BigInt!

  collections: [Collection!]! @derivedFrom(field: "engine")
  mintedNfts: [NFT!]! @derivedFrom(field: "mintedByEngine")
}

type NFT @entity {
  id: ID!
  tokenId: BigInt!

  createdAtTimestamp: BigInt!
  lastActivityAtTimestamp: BigInt!

  collection: Collection!
  owner: Account!
  mintedBy: Account!
  mintedTo: Account!
  mintedByEngine: Engine!
}

type NFTTransfer @entity {
  id: ID!
  to: String!
  from: String!

  transactionHash: String!
  createdAtTimestamp: BigInt!

  nft: NFT!
}

type Account @entity {
  id: ID!
  address: String!
  createdCollectionsCount: Int!
  ownedNftsCount: Int!
  mintedNftsCount: Int!

  firstSeenAtTimestamp: BigInt!
  lastSeenAtTimestamp: BigInt!

  createdCollections: [Collection!]! @derivedFrom(field: "creator")
  ownedNfts: [NFT!]! @derivedFrom(field: "owner")
  mintedNfts: [NFT!]! @derivedFrom(field: "mintedBy")
}
