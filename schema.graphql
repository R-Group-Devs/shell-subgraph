type Factory @entity {
  id: ID!
  address: String!
  owner: Account!

  createdAtTimestamp: BigInt!

  implementations: [Implementation!]! @derivedFrom(field: "factory")
}

type Implementation @entity {
  id: ID!
  name: String!
  address: String!
  factory: Factory!

  createdAtTimestamp: BigInt!

  collections: [Collection!]! @derivedFrom(field: "implementation")
}

type Collection @entity {
  id: ID!
  name: String!
  symbol: String!
  address: String!

  implementation: Implementation!
  factory: Factory! # denormalized (implementation -> factory)
  creator: Account!

  createdAtTimestamp: BigInt!

  forks: [Fork!]! @derivedFrom(field: "collection")
  nfts: [NFT!]! @derivedFrom(field: "collection")
}

type Fork @entity {
  id: ID!
  forkId: BigInt!
  collection: Collection!
  owner: Account!
  engine: Engine!

  createdAtTimestamp: BigInt!

  nfts: [NFT!]! @derivedFrom(field: "fork")
}

type Engine @entity {
  id: ID!
  address: String!
  name: String!

  createdAtTimestamp: BigInt!

  forks: [Fork!]! @derivedFrom(field: "engine")
}

type NFT @entity {
  id: ID!
  tokenId: BigInt!
  totalSupply: BigInt!
  collection: Collection!
  fork: Fork!

  createdAtTimestamp: BigInt!

  owners: [NFTOwner!]! @derivedFrom(field: "nft")
}

type NFTOwner @entity {
  id: ID!
  nft: NFT!
  owner: Account!
  balance: BigInt!
  collection: Collection!

  createdAtTimestamp: BigInt!
}

type Account @entity {
  id: ID!
  address: String!

  createdAtTimestamp: BigInt!
}

